from gpiozero import DistanceSensor
import time
import numpy as np

def GetAvgSensorDataOverTime():
    AvgObstacleInterference = [0, 0, 0, 0]
    
    sensor1_data, sensor2_data, sensor3_data, sensor4_data = read_JSR_sensor_data(trigger1, echo1, trigger2, echo2, trigger3, echo3, trigger4, echo4)
    
    ObstacleArr_data = np.array(check_obstacle(sensor1_data, sensor2_data, sensor3_data, sensor4_data))
    time.sleep(0.5)
    
    ObstacleArr_data2 = np.array(check_obstacle(sensor1_data, sensor2_data, sensor3_data, sensor4_data))
    time.sleep(0.5)
    
    ObstacleArr_data3 = np.array(check_obstacle(sensor1_data, sensor2_data, sensor3_data, sensor4_data))
    time.sleep(0.5)
    
    sum_ObstacleArr =  ObstacleArr_data + ObstacleArr_data2 + ObstacleArr_data3
    
    for i in range(4):
        AvgObstacleInterference[i] = sum_ObstacleArr[i] // 3
    return AvgObstacleInterference

def check_obstacle(sensor1_data, sensor2_data, sensor3_data, sensor4_data):
    ObstacleVal = []
    if 35 <= sensor1_data <= 90:
        ObstacleVal.append(1)
    else:
        ObstacleVal.append(0)
    if 35 <= sensor2_data <= 90:
        ObstacleVal.append(1)
    else:
        ObstacleVal.append(0)
    if 35 <= sensor3_data <= 90:
        ObstacleVal.append(1)
    else:
        ObstacleVal.append(0)
    if 10 <= sensor4_data <= 35:
        ObstacleVal.append(1)
    else:
        ObstacleVal.append(0)
    return ObstacleVal

def read_JSR_sensor_data(trigger1, echo1, trigger2, echo2, trigger3, echo3, trigger4, echo4):
    #gets sensor 1 distance
    range = DistanceSensor(echo1, trigger1, max_distance=20)
    distance_inches1 = (range.distance) * 39.37
    time.sleep(0.1)
    
    #get sensor 2 distance
    range = DistanceSensor(echo2, trigger2, max_distance=20)
    distance_inches2 = (range.distance) * 39.37
    time.sleep(0.1)
    #gets sensor 3 distance
    range = DistanceSensor(echo3, trigger3, max_distance=20)
    distance_inches3 = (range.distance) * 39.37
    time.sleep(0.1)
    
    #gets sensor 1 distance
    range = DistanceSensor(echo4, trigger4, max_distance=20)
    distance_inches4 = (range.distance) * 39.37
    time.sleep(0.1)
    return distance_inches1, distance_inches2, distance_inches3, distance_inches4



# Define GPIO pins for the sensors
trigger1, echo1 = 17, 18
trigger2, echo2 = 22, 27
trigger3, echo3 = 23, 24
trigger4, echo4 = 8, 25

# Call the function to read data from all four sensors
while True:
    sensor1_data, sensor2_data, sensor3_data, sensor4_data = read_JSR_sensor_data(trigger1, echo1, trigger2, echo2, trigger3, echo3, trigger4, echo4)
    ObstacleArr_data = np.array(check_obstacle(sensor1_data, sensor2_data, sensor3_data, sensor4_data))
    #OvertimeObstacleInterference_data = GetAvgSensorDataOverTime()
    print(sensor1_data, sensor2_data, sensor3_data, sensor4_data)
    print("Obstacle Check:", ObstacleArr_data)
    #print("AvgScan: ", OvertimeObstacleInterference_data)
    #print("")


